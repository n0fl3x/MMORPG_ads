Нам необходимо разработать интернет-ресурс для фанатского сервера одной известной MMORPG —
что-то вроде доски объявлений. Пользователи нашего ресурса должны иметь возможность зарегистрироваться в нём по e-mail,
получив письмо с кодом подтверждения регистрации. После регистрации им становится доступно создание и
редактирование объявлений. Объявления состоят из заголовка и текста, внутри которого могут быть картинки,
встроенные видео и другой контент. Пользователи могут отправлять отклики на объявления других пользователей,
состоящие из простого текста. При отправке отклика пользователь должен получить e-mail с оповещением о нём.
Также пользователю должна быть доступна приватная страница с откликами на его объявления, внутри которой он может
фильтровать отклики по объявлениям, удалять их и принимать (при принятии отклика пользователю, оставившему отклик,
также должно прийти уведомление). Кроме того, пользователь обязательно должен определить объявление в одну из
следующих категорий: Танки, Хилы, ДД, Торговцы, Гилдмастеры, Квестгиверы, Кузнецы, Кожевники, Зельевары,
Мастера заклинаний.

Также мы бы хотели иметь возможность отправлять пользователям новостные рассылки.

---

Модели:

1. Пользователь-автор.
    Т.к. если подтвердил по почте свою регистрацию, то уже может создавать объявления.

    Поля:
    - id (автополе)
    - имя
    - почта

    Все эти поля есть в стандартной Джанго-модели User. Её и будем использовать.

2. Объявление.

    Поля:
    - id (автополе)
    - дата создания
    - кто автор - связь "ForeignKey"
    - заголовок
    - категория
    - содержание объявления (текст, контент) - можно оставить пустым

    Методы:
    - get_adv_pk:
        возвращает строку с id конкретного объявления в БД
        (для последующей реализации просмотра через дженерик DetailView)

    (?) - preview:
        возвращает малую часть объявления для предпросмотра,
        чтобы не отображать огромные объявления на главной странице
        (посмотреть можно ли такое провернуть с CKEditor'ом)

3. Отклик.

    Поля:
    - id (автополе)
    - дата создания
    - автор отклика - связь "ForeignKey"
    - к какому объявлению - связь "ForeignKey"
    - текст - можно оставить пустым
    - принят или нет
    - отклонён или нет

    Методы:
    - approve:
        меняет статус отклика с нейтрального на принятый

    - disapprove:
        обратно approve

    - reject:
        меняет статус отклика с нейтрального на отклонённый

    - unreject:
        обратно reject

---

Урлы:

1. Список всех объявлений (через ListViews) - пусть это будет главная страница.
На неё же будет редиректить пользователя после логина и логаута.
Подгружать все отклики к каждому объявлению на этой странице не будем - слишком громоздко.
Но можно просто показывать количество откликов в виде числа.

2. Просмотр конкретного объявления. Достаём id объявления через метод get_adv_pk, втыкаем в урл -> profit.
На такой странице уже будем выводить отклики.

3. Создание/редактирование объявления.

4. Удаление объявления с подтверждением.

5. Создание/редактирование отклика.

6. Удаление отклика с подтверждением.

5. Личная страница пользователя с его объявлениями и откликами.

---

Темплейты:

- реализовать в хедере следующие ссылки:
    * логин
    * логаут
    + главная страница
    * поиск объявлений
    * создать объявление
    * личная страница

- на странице простмотра всех объявлений:
    * выводить к каждому объявлению только: тайтл, автора, дату и время создания, только КОЛИЧЕСТВО
    откликов к нему, ссылку для перехода к самому объявлению
    * не забыть пагинацию (!)

- на странице просмотра конкретного объявления:
    * для каждого отклика выводить дату и время его создания
    * для авторизованных пользователей добавить кнопку создание отклика
    * для автора объявления добавить кнопки редактирования и удаления объявления
    * для автора отклика добавить кнопку редактирования и удаления отклика
    * для автора объявления добавить кнопки принять/отменить отклик и отклонить/отменить отклик

---

Идеи, логика:

- если отклик был принят/отклонён, то помимо емейла отобразить это на странице
- запретить автору объявления создавать к нему собственный отклик
+ при удалении объявления и отклика спрашивать подтверждение
- когда создаётся отклик или меняется его статус, то должно приходить письмо автору отклика
